{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/models/defineClass.ts","./src/app/services/card.service.ts","./src/app/services/contract.service.ts","./src/app/services/remote.service.ts","./src/app/services/student.service.ts","./src/app/views/card-details/card-details.component.css","./src/app/views/card-details/card-details.component.html","./src/app/views/card-details/card-details.component.ts","./src/app/views/card-list/card-list.component.css","./src/app/views/card-list/card-list.component.html","./src/app/views/card-list/card-list.component.ts","./src/app/views/contract-details/contract-details.component.css","./src/app/views/contract-details/contract-details.component.html","./src/app/views/contract-details/contract-details.component.ts","./src/app/views/student-details/student-details.component.css","./src/app/views/student-details/student-details.component.html","./src/app/views/student-details/student-details.component.ts","./src/app/views/student-list/student-list.component.css","./src/app/views/student-list/student-list.component.html","./src/app/views/student-list/student-list.component.ts","./src/app/views/wallet-details/wallet-details.component.css","./src/app/views/wallet-details/wallet-details.component.html","./src/app/views/wallet-details/wallet-details.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\n//import { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nimport { CardListComponent }        from './views/card-list/card-list.component';\nimport { WalletDetailsComponent }   from './views/wallet-details/wallet-details.component';  \nimport { ContractDetailsComponent }   from './views/contract-details/contract-details.component';  \n\n// @NgModule({\n//   imports: [\n//     CommonModule\n//   ],\n//   declarations: []\n// })\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'CardList', pathMatch: 'full' },\n    { path: 'CardList',         component: CardListComponent },\n    { path: 'WalletDetails',    component: WalletDetailsComponent },\n    { path: 'ContractDetails',  component: ContractDetailsComponent }\n];\n\n\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\n    <!--\\n    <nav class=\\\"navbar navbar-inverse\\\">\\n      <div class=\\\"container\\\">\\n          <div class=\\\"navbar-header\\\">\\n              <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\n                      data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n                  <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                  <span class=\\\"icon-bar\\\"></span>\\n                  <span class=\\\"icon-bar\\\"></span>\\n                  <span class=\\\"icon-bar\\\"></span>\\n              </button>\\n              <a class=\\\"navbar-brand\\\" href=\\\"\\\"><span class=\\\"glyphicon glyphicon-home\\\"></span> Home</a>\\n          </div>\\n          <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n          </div>\\n      </div>\\n  </nav>\\n  -->\\n  \\n  <!--\\n  <div id=\\\"header-container\\\">\\n    <div class=\\\"container\\\">\\n\\t<div id=\\\"header\\\">\\n        <a id=\\\"logo\\\"><img src=\\\"assets/imgs/logo-b.png\\\"></a>\\n    </div>\\n    </div>\\n</div>\\n<hr>\\n-->\\n\\n\\n  <!--<div>cards info list</div>\\n    <student-list></student-list>-->\\n\\n    <!--\\n    <card-list></card-list>\\n    <app-wallet-details></app-wallet-details>\\n    -->\\n  <router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { StudentDetailsComponent } from './views/student-details/student-details.component';\nimport { StudentListComponent } from './views/student-list/student-list.component';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { CardDetailsComponent } from './views/card-details/card-details.component';\nimport { CardListComponent } from './views/card-list/card-list.component';\n\nimport { HttpModule } from '@angular/http';\nimport { WalletDetailsComponent } from './views/wallet-details/wallet-details.component';  // For remote service, can not use HttpClientModule ?\n\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { ContractDetailsComponent } from './views/contract-details/contract-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentDetailsComponent,\n    StudentListComponent,\n    CardDetailsComponent,\n    CardListComponent,\n    WalletDetailsComponent,\n    ContractDetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,      \n    HttpClientModule,\n    FileUploadModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\nexport class Student {\n    // This is for the object id auto generated by mongo\n    _id?: string;\n    FirstName: string;\n    LastName: string;\n    School: string;\n    StartDate: Date;\n}\n\nexport class Card {\n    // This is for the object id auto generated by mongo\n    _id?:       string;\n    OwnerName:  string;\n    CardName:   string;\n    CardAddress: string;\n    Password:   string;\n    StartDate:  Date;\n}\n\nexport class CardBalance {\n    balance: string;\n    nonce:   string;\n    type:    number;\n}\n\nexport class NetState {\n\n    public chain_id: number\n    public tail: string;\n    public lib: string;\n    public height: string;\n    public protocol_version: string;\n    public synchronized: boolean;\n    public version: string\n}\n\nexport class PwdChangeStatusModel {\n    _body:string;\n    status:number;\n    statusText:string;\n}\n  \n\nexport class NetStatusResult {\n    chain_id: number;\n    height: string;\n    lib: string;\n    protocol_version: string;\n    synchronized: boolean;\n    tail: string;\n    version: string;\n}\n\nexport class NetStatusModel {\n    result: NetStatusResult;\n}\n\n\nexport class signedTransaction {\n    nonce: number;\n    file: any;\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/defineClass.ts","\n/****************\n * \n *  By \\routes\\card.js (Node.js API service, to access Mongo DB for card/wallet/account info )\n *  \n *  Used at card-list and card-details component\n * \n ***************/\n\n\nimport { Injectable } from '@angular/core';\nimport { Card, CardBalance } from '../models/defineClass';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n//import 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class CardService {\n\n    //private cardsUrl = '/api/cards';                            // For Internet !!!!!!!!!!!!!!!!!!!!!!!!!!!\n    private cardsUrl = 'http://127.0.0.1:3000/api/cards';     // For local debug, need open CORS on Chrome \n\n    constructor (private http: HttpClient) {}\n\n    \n    // get(\"/api/cards\")\n    getCards(): Promise<Card[] | void> {\n      return this.http.get(this.cardsUrl)\n                 .toPromise()\n                 .then(response => response as Card[])\n                 .catch(this.handleError);\n    }\n\n    // post(\"/api/cards\")\n    createCard(newCard: Card): Promise<Card | void> {\n      return this.http.post(this.cardsUrl, newCard)\n                 .toPromise()\n                 .then(response => response as Card)\n                 .catch(this.handleError);\n    }\n\n    // get(\"/api/cards/:id\") endpoint not used by Angular app\n\n    // delete(\"/api/cards/:id\")\n    deleteCard(delCardId: String): Promise<String | void> {\n      return this.http.delete(this.cardsUrl + '/' + delCardId)\n                 .toPromise()\n                 .then(response => response as String)\n                 .catch(this.handleError);\n    }\n\n    // put(\"/api/cards/:id\")\n    updateCard(putCard: Card): Promise<Card | void > {\n\n        console.log(\"account info update ... PUT() ..... \");\n\n      var putUrl = this.cardsUrl + '/' + putCard._id;\n      return this.http.put(putUrl, putCard)\n                 .toPromise()\n                 .then(response => response as Card)\n                 .catch(this.handleError);\n    }\n\n\n    // get card Balance by CardAddress\n    refreashCard(cardAddress: String): Promise<CardBalance | void > {\n\n      console.log(\"In card service : refreashCard ...\" + cardAddress);\n\n      // private cardsBalanceUrl = '/api/cardsBalance';   -- get API service by cards.js in routes folder\n      return this.http.get(this.cardsUrl + '/' + cardAddress)\n                 .toPromise()\n                 .then(response => response as CardBalance)\n                 .catch(this.handleError);\n    }   \n\n\n    private handleError (error: any) {\n      let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n      console.error(errMsg); // log to console instead\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/card.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n//import 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class ContractService {\n\n    //private contractUrl = '/api/contracts';\n    private contractUrl = 'http://127.0.0.1:3000/api/contracts';       // For local debug, need open CORS on Chrome \n\n    constructor(private http: HttpClient) { }\n\n    // Check TX Status\n    getContracts(hash: string): Promise<any | void> {\n    //getContracts(): Promise<any | void> {\n\n        return this.http.get(this.contractUrl + '/' + hash)\n        //return this.http.get(this.contractUrl)\n            .toPromise()\n            .then(response => response)\n            .catch(this.handleError);\n    }\n\n    private handleError(error: any) {\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(errMsg); // log to console instead\n    }\n\n    // 2. 测试合约\n    testTransaction(data: any): Promise<any> {\n\n        var info = data.toAddress + '`' + data.nonce.toString() + '`' + data.value + '`' + data.contractAddress;\n\n        var putUrl = this.contractUrl + '/' + info;\n        //var putUrl = this.studentsUrl + '/' + \"n1RaCeVeLxzJG2yLwE155y2S6EqjWeVboqJ\";\n\n        return this.http.put(putUrl, data)\n            .toPromise()\n            .then(response => response)\n            .catch(this.handleError);\n    }\n\n    // 3. 执行合约 Call\n    callTransaction(file: any, data: any): Promise<any> {\n\n        //var info = data.toAddress + ' ' + data.nonce.toString() + ' ' + data.value;\n        var info = data.toAddress + '`' + data.password + '`' + data.nonce.toString() + '`' + data.value + '`' + data.function + '`' + data.arguments;\n\n        // , 'function': this.function, 'arguments': this.arguments \n\n        var putUrl = this.contractUrl + '/' + info;\n        //var putUrl = this.studentsUrl + '/' + \"n1RaCeVeLxzJG2yLwE155y2S6EqjWeVboqJ\";\n\n        console.log(file);\n        console.log(info);\n\n        return this.http.post(putUrl, file)\n            .toPromise()\n            .then(response => response)\n            .catch(this.handleError);\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/contract.service.ts","\n\n/****************\n * \n *  By Nebulas API service, to access wallet/account info )\n *  \n *  Used at contract-details component\n * \n ***************/\n\n\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { NetState, PwdChangeStatusModel, Card, CardBalance } from '../models/defineClass';\n\n@Injectable()\nexport class RemoteService {\n\n    public site: string;\n\n    constructor(private http: Http) {\n\n        this.site = \"https://pacific-plains-55185.herokuapp.com/\";\n\n    }\n\n    getNetState(): Promise<NetState | any> {\n\n        //let url  = this.site + 'api/students';\n\n        let url = 'https://testnet.nebulas.io/v1/user/nebstate';\n        //let url =  'http://localhost:8685/v1/user/nebstate';\n\n        console.log(url);\n\n        let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });   // For mean\n\n        let options = new RequestOptions({ headers: headers });\n\n        return this.http.get(url, options)\n            .toPromise()\n            .then(response => response.json() as NetState)\n            .catch(this.handleError);\n    }\n\n\n    getAccountState(address: string): Promise<CardBalance | any> {\n\n        //let url  = this.site + 'api/students';\n        //let url = 'http://localhost:8685/v1/user/accountstate';\n        let url = 'https://testnet.nebulas.io/v1/user/accountstate';\n\n        let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });   // For mean\n\n        let options = new RequestOptions({ headers: headers });\n\n        //return this.http.post(url, {\"address\":\"n1MjR3J28LPYGSVNGYC8DWsM7VJaAqqPnWH\"}, options)  // local address\n        return this.http.post(url, { \"address\": address }, options)    // Test net address\n            .toPromise()\n            //.then(response => response.json() as CardBalance)\n            .then(response => this.parsePwdChangeData(response))\n            .catch(this.handleError);\n    }\n\n\n    // Retreival of JSON from .NET is a success.\n    // I had trouble parsing the passwordChange response with extractData so I \n    // created this custom function to do it.\n    private parsePwdChangeData(res: Response) {\n        let pwdChangeStatus = new PwdChangeStatusModel();\n        pwdChangeStatus._body = res[\"_body\"];\n        pwdChangeStatus.status = res[\"status\"];\n        pwdChangeStatus.statusText = res[\"statusText\"];\n        return pwdChangeStatus || {};\n    }\n\n\n    // Retreival of JSON from .NET is a success.\n    private extractData(res: Response) {\n        let body = res.json();\n        return body || {};\n    }\n\n    // An error occurred. Notify the user.\n    private handleError(error: any) {\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        return Observable.throw(errMsg);\n    }\n\n    // Resolve circular references from JSON object\n    // http://stackoverflow.com/questions/15312529/resolve-circular-references-from-json-object\n\n    // JSON and XML Serialization in ASP.NET Web API\n    // https://docs.microsoft.com/en-us/aspnet/web-api/overview/formats-and-model-binding/json-and-xml-serialization#handling_circular_object_references\n    resolveReferences(json) {\n\n        if (typeof json === 'string')\n            json = JSON.parse(json);\n\n        var byid = {}, // all objects by id\n            refs = []; // references to objects that could not be resolved\n\n        json = (function recurse(obj, prop, parent) {\n            if (typeof obj !== 'object' || !obj) // a primitive value\n                return obj;\n\n            if (\"$ref\" in obj) { // a reference\n                var ref = obj.$ref;\n                if (ref in byid)\n                    return byid[ref];\n                // else we have to make it lazy:\n                refs.push([parent, prop, ref]);\n                return;\n\n            } else if (\"$id\" in obj) {\n                var id = obj.$id;\n                delete obj.$id;\n                if (\"$values\" in obj) // an array\n                    obj = obj.$values.map(recurse);\n                else // a plain object\n                    for (let prop in obj)\n                        obj[prop] = recurse(obj[prop], prop, obj)\n                byid[id] = obj;\n            }\n            return obj;\n\n        })(json); // run it!\n\n        for (var i = 0; i < refs.length; i++) { // resolve previously unknown references\n            var ref = refs[i];\n            ref[0][ref[1]] = byid[refs[2]];\n            // Notice that this throws if you put in a reference at top-level\n        }\n        return json;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/remote.service.ts","\n\n/****************\n * \n *  By \\routes\\student.js (Nebulas.js lib functions to access NAS wallet/account info )\n *  \n *  Used at wallet-list and wallet-details components\n * \n ***************/\n\nimport { Injectable } from '@angular/core';\nimport { Student, Card, CardBalance, signedTransaction } from '../models/defineClass';\nimport { Http, Response } from '@angular/http';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n//import 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class StudentService {\n\n    //private studentsUrl = '/api/students';                              // For internet  !!!!!!!!!!!!!!!!!!!!!!!!!!!\n    private studentsUrl = 'http://127.0.0.1:3000/api/students';       // For local debug, need open CORS on Chrome \n\n    constructor(private http: HttpClient) { }\n\n    // get(\"/api/students\")\n    getStudents(): Promise<Student[] | void> {\n        return this.http.get(this.studentsUrl)\n            .toPromise()\n            .then(response => response as Student[])\n            .catch(this.handleError);\n    }\n\n    // get(\"/api/student/id\")\n    getStudent(student: string): Promise<Student[] | void> {\n\n        return this.http.get(this.studentsUrl)\n            .toPromise()\n            .then(response => response as Student[])\n            .catch(this.handleError);\n    }\n\n\n    getAccountState(cardAddress: String): Promise<CardBalance | void> {\n\n        console.log(\"In card service : refreashCard ...\" + cardAddress);\n\n        // private cardsBalanceUrl = '/api/cardsBalance';   -- get API service by cards.js in routes folder\n        return this.http.get(this.studentsUrl + '/' + cardAddress)\n            .toPromise()\n            .then(response => response as CardBalance)\n            .catch(this.handleError);\n    }\n\n\n    // 1. 账户解锁\n    postAccount(file: any): Promise<Student | any> {\n\n        console.log(file);\n        console.log(file.name);\n\n        return this.http.post(this.studentsUrl, file)\n            .toPromise()\n            .then(response => response as Student)\n            .catch(this.handleError);\n    }\n\n    // 2. 生成签名\n    putTransaction(file: any, data: any): Promise<Student | any> {\n\n        var info = data.toAddress + ' ' + data.nonce.toString() + ' ' + data.value;\n\n        var putUrl = this.studentsUrl + '/' + info;\n        //var putUrl = this.studentsUrl + '/' + \"n1RaCeVeLxzJG2yLwE155y2S6EqjWeVboqJ\";\n\n        console.log(file);\n        console.log(info);\n\n        return this.http.put(putUrl, file)\n            .toPromise()\n            .then(response => response as Student)\n            .catch(this.handleError);\n    }\n\n    // 3. 发送交易\n    deleteStudent(delStudentId: String): Promise<Student | any> {\n\n        return this.http.delete(this.studentsUrl + '/' + delStudentId)\n            .toPromise()\n            .then(response => response as Student)\n            .catch(this.handleError);\n    }\n\n\n    // put(\"/api/students/:id\")\n    updateStudent(putStudent: Student): Promise<Student | void> {\n\n        var putUrl = this.studentsUrl + '/' + putStudent._id;\n\n        return this.http.put(putUrl, putStudent)\n            .toPromise()\n            .then(response => response as Student)\n            .catch(this.handleError);\n    }\n\n    private handleError(error: any) {\n        let errMsg = (error.message) ? error.message :\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n        console.error(errMsg); // log to console instead\n    }\n\n\n    // post(\"/api/students\")\n    createStudent(newStudent: Student): Promise<Student | void> {\n        return this.http.post(this.studentsUrl, newStudent)\n            .toPromise()\n            .then(response => response as Student)\n            .catch(this.handleError);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/student.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/card-details/card-details.component.css\n// module id = ./src/app/views/card-details/card-details.component.css\n// module chunks = main","module.exports = \"\\n\\n\\n<div *ngIf=\\\"card\\\" class=\\\"row\\\" >\\n  <div class=\\\"col-md-12\\\">\\n    <h3 *ngIf=\\\"card._id\\\">Details</h3>\\n    <h3 *ngIf=\\\"!card._id\\\">Add wallete</h3>\\n  </div>\\n</div>\\n<div *ngIf=\\\"card\\\" class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"card-OwnerName\\\">Owner</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-OwnerName\\\" [(ngModel)]=\\\"card.OwnerName\\\" placeholder=\\\"Wallet owner name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"card-CardName\\\">Wallet name</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-CardName\\\" [(ngModel)]=\\\"card.CardName\\\" placeholder=\\\"Wallet name\\\"/>\\n    </div>\\t\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"card-CardAddress\\\">Address</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-CardAddress\\\" [(ngModel)]=\\\"card.CardAddress\\\" placeholder=\\\"Address\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"card-Password\\\">Password</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-Password\\\" [(ngModel)]=\\\"card.Password\\\" placeholder=\\\"Password\\\"/>\\n    </div>\\n    <div *ngIf=\\\"card._id\\\" class=\\\"form-group\\\">\\n      <label for=\\\"card-start-date\\\">date</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-start-date\\\" [(ngModel)]=\\\"card.StartDate\\\" placeholder=\\\"\\\"/>\\n    </div>\\n    \\n    <div *ngIf=\\\"card._id\\\" class=\\\"form-group\\\">\\n      <label for=\\\"card-Balance\\\">Balance</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-Balance\\\" [(ngModel)]=\\\"balance\\\" placeholder=\\\"\\\"/>\\n    </div>\\n    \\n    <div *ngIf=\\\"card._id\\\" class=\\\"form-group\\\">\\n      <label for=\\\"card-Nonce\\\">Nonce</label>\\n      <input class=\\\"form-control\\\" name=\\\"card-Nonce\\\" [(ngModel)]=\\\"nonce\\\" placeholder=\\\"\\\"/>\\n    </div>\\n\\n    <button class=\\\"btn btn-primary col-lg-3 col-md-3 col-sm-3\\\" *ngIf=\\\"!card._id\\\" (click)=\\\"createCard(card)\\\">Save</button>\\n    <button class=\\\"btn btn-info col-lg-3 col-md-3 col-sm-3\\\"    *ngIf=\\\"card._id\\\" (click)=\\\"updateCard(card)\\\">Modify</button>\\n    <button class=\\\"btn btn-danger col-lg-3 col-md-3 col-sm-3\\\"  *ngIf=\\\"card._id\\\" (click)=\\\"deleteCard(card._id)\\\">Delete</button><br/>\\n\\n    <!--\\n    <button class=\\\"btn btn-info\\\" *ngIf=\\\"card.CardAddress\\\" (click)=\\\"refreashCard(card.CardAddress)\\\">查看详情</button>\\n    -->\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/card-details/card-details.component.html\n// module id = ./src/app/views/card-details/card-details.component.html\n// module chunks = main","\nimport { Component, Input } from '@angular/core';\n\nimport { Card, CardBalance } from '../../models/defineClass';\nimport { Student } from '../../models/defineClass';\nimport { CardService } from '../../services/card.service';\n\n@Component({\n  selector: 'card-details',\n  templateUrl: './card-details.component.html',\n  styleUrls: ['./card-details.component.css']\n})\n\nexport class CardDetailsComponent {\n  @Input()\n  card: Card;\n  @Input()\n  balance: string;\n  @Input()\n  nonce: string;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n\n\n  \n\n  constructor (private cardService: CardService) {\n  }\n\n  createCard(card: Card) {\n\n    if (!card.OwnerName || !card.CardName || !card.CardAddress) {\n      return;\n    }\n\n    this.cardService.createCard(card).then((newCard: Card) => {\n      this.createHandler(newCard);\n    });\n  }\n\n  updateCard(card: Card): void {\n    this.cardService.updateCard(card).then((updatedCard: Card) => {\n      this.updateHandler(updatedCard);\n    });\n  }\n\n  deleteCard(cardId: String): void {\n    \n    this.cardService.deleteCard(cardId).then((deletedcardId: String) => {\n\n      console.log(\"Delete card ID: \" + cardId);\n      // deletedcardId is wrong ID ??  Why ??\n\n      this.deleteHandler(cardId);\n    });\n  }\n\n  /*\n  refreashCard(cardAddress: String): void {\n\n    console.log(\"In refreashCard of card-details.ts \");\n\n    this.cardService.refreashCard(cardAddress).then((cardBalance: CardBalance) => {\n      \n      console.log(\"Got from cardService.refreashCard of card-details.ts \");\n\n      console.log(cardBalance);\n      console.log(cardBalance.balance);\n      console.log(cardBalance.nonce);\n      console.log(cardBalance.type);\n\n\n      this.balance = Number(cardBalance.balance) / 1000000000000000000.0;\n      this.nonce   = cardBalance.nonce;\n\n    });\n  }\n  */\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/card-details/card-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/card-list/card-list.component.css\n// module id = ./src/app/views/card-list/card-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"form-group pull-right col-lg-2 col-md-2 col-sm-2\\\" style=\\\"padding-top: 12px;\\\">\\n        <select class=\\\"form-control\\\" id=\\\"net\\\" required [(ngModel)]=\\\"netType\\\" (change)=\\\"onNetChange()\\\" name='net'>\\n            <option *ngFor=\\\"let item1 of netTypeArr\\\" [value]=\\\"item1.value\\\">{{item1.name}}</option>\\n        </select>\\n    </div>\\n\\n    <a id=\\\"logo\\\">\\n        <img src=\\\"assets/imgs/logo-b.png\\\">\\n    </a>\\n</div>\\n\\n<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n                aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n                <img alt=\\\"Nebulas\\\" src=\\\"assets/imgs/icon_19.png\\\">\\n            </a>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">NAS Wallet Library</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li *ngFor=\\\"let item of menuMyItems\\\" class={{item.active}}>\\n                    <a routerLink={{item.path}}{{item.parameterID}}{{item.random}} routerLinkActive=\\\"active fluffy\\\">{{item.linkName}}</a>\\n                </li>\\n                <!--<li  *ngFor=\\\"let item of menuMyItems\\\" class={{item.active}}><a routerLink={{item.path}}{{item.parameterID}} routerLinkActive=\\\"active fluffy\\\">{{item.linkName}}</a></li>-->\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a routerLink=\\\"/ContractDetails\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Contracts</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a routerLink=\\\"/WalletDetails\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-usd\\\"></span> Transactions</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li class='active'>\\n                    <a routerLink=\\\"/CardList\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-list\\\"></span> Wallets</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h3>Wallet Listing</h3>\\n            <ul class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let s of cards\\\" (click)=\\\"selectCard(s)\\\" [class.active]=\\\"s === selectedCard\\\">\\n                    {{s.OwnerName}} {{s.CardName}} {{s.CardAddress}}\\n                </li>\\n            </ul>\\n            <button class=\\\"btn btn-info col-lg-3 col-md-3 col-sm-3\\\" (click)=\\\"createNewCard()\\\">Add</button>\\n            <button class=\\\"btn btn-warning col-lg-3 col-md-3 col-sm-3\\\" (click)=\\\"showNetState()\\\">Net State</button>\\n\\n            <h3 *ngIf=\\\"Chain_ID\\\" >NAS Net Infomation</h3>\\n            <ul *ngIf=\\\"Chain_ID\\\" class=\\\"list-group\\\">\\n                <li class=\\\"list-group-item\\\">Chain_ID: {{Chain_ID}}</li>\\n                <li class=\\\"list-group-item\\\">Height: {{Height}}</li>\\n                <li class=\\\"list-group-item\\\">Lib: {{Lib}}</li>\\n                <li class=\\\"list-group-item\\\">Protocol_version: {{Protocol_version}}}</li>\\n                <li class=\\\"list-group-item\\\">Synchronized: {{Synchronized}}</li>\\n                <li class=\\\"list-group-item\\\">Tail: {{Tail}}</li>\\n                <li class=\\\"list-group-item\\\">Version: {{Version}}</li>\\n\\n            </ul>\\n        </div>\\n\\n        <div class=\\\"col-md-5 col-md-offset-1\\\">\\n            <card-details [card]=\\\"selectedCard\\\" [balance]=\\\"balance\\\" [nonce]=\\\"nonce\\\" [createHandler]=\\\"addCard\\\" [updateHandler]=\\\"updateCard\\\"\\n                [deleteHandler]=\\\"deleteCard\\\">\\n            </card-details>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/card-list/card-list.component.html\n// module id = ./src/app/views/card-list/card-list.component.html\n// module chunks = main","\nimport { Component, OnInit } from '@angular/core';\nimport { Card, CardBalance } from '../../models/defineClass';\nimport { Student } from '../../models/defineClass';\nimport { CardService } from '../../services/card.service';\n\nimport { RemoteService } from '../../services/remote.service';\nimport { NetState, PwdChangeStatusModel, NetStatusModel } from '../../models/defineClass';\nimport { CardDetailsComponent } from '../card-details/card-details.component';\n\nexport class Result {\n    result: CardBalance;\n}\n\n\n@Component({\n    selector: 'card-list',\n    templateUrl: './card-list.component.html',\n    styleUrls: ['./card-list.component.css'],\n    providers: [CardService, RemoteService]\n})\n\n\nexport class CardListComponent implements OnInit {\n\n    cards: Card[]\n    selectedCard: Card\n\n    netState: NetState;\n\n    cardBalance: CardBalance;\n\n    resultData: Result;\n\n    private balance: string = null;\n    private nonce: string = null;\n\n\n    // For Setect Net\n    netTypeArr = [\n        { value: '0', name: \"Testnet\" },\n        { value: '1', name: \"Local nodes\" },\n        { value: '2', name: \"Mainnet\" },\n    ];\n\n    netType: string = '0';\n\n    Chain_ID: number;\n    Height: string;\n    Lib: string;\n    Protocol_version: string;\n    Synchronized: boolean;\n    Tail: string;\n    Version: string;\n\n    constructor(private CardService: CardService,\n        private remoteService: RemoteService\n    ) { }\n\n    ngOnInit() {\n        this.CardService\n            .getCards()\n            .then((cards: Card[]) => {\n                this.cards = cards.map((card) => {\n                    return card;\n                });\n            });\n    }\n\n    private getIndexOfCard = (cardId: String) => {\n        return this.cards.findIndex((card) => {\n            return card._id === cardId;\n        });\n    }\n\n    selectCard(card: Card) {\n\n        this.selectedCard = card;\n\n        this.balance = '';\n        this.nonce = '';\n\n        //this.CardService.refreashCard(card.CardAddress).then((cardBalance: CardBalance) => {\n        this.remoteService.getAccountState(card.CardAddress).then((cardBalance: PwdChangeStatusModel) => {\n\n            console.log(\"Got from cardService.refreashCard of card-details.ts \");\n\n            console.log(cardBalance);\n            //console.log(cardBalance._body);\n\n            //this.cardBalance = JSON.parse(cardBalance._body);\n            //console.log(this.cardBalance);\n\n            this.resultData = JSON.parse(cardBalance._body);\n\n            //console.log(this.resultData.result.balance);\n            //console.log(this.resultData.result.nonce);\n\n            var dataBalance = Number(this.resultData.result.balance) / 1000000000000000000.0;\n\n            if (!isNaN(dataBalance))\n                this.balance = dataBalance.toString() + ' NAS';\n            else\n                this.balance = '';\n\n            this.nonce = this.resultData.result.nonce;\n        });\n    }\n\n    showNetState() {\n\n        //this.remoteService.getNetState().then((netState: NetState) => {\n        this.remoteService.getNetState()\n            //.then((netState: PwdChangeStatusModel) => this.netState = netState)\n            .then((netState: NetStatusModel) => { \n                console.log(netState);\n\n                this.Chain_ID = netState.result.chain_id;\n                this.Height = netState.result.height;\n                this.Lib = netState.result.lib;\n                this.Protocol_version = netState.result.protocol_version;\n                this.Synchronized = netState.result.synchronized;\n                this.Tail = netState.result.tail;\n                this.Version = netState.result.version;\n            } );\n    }\n\n    createNewCard() {\n        var card: Card = {\n            OwnerName: '',\n            CardName: '',\n            CardAddress: '',\n            Password: '',\n            StartDate: new Date()\n        };\n\n        this.balance = '';\n        this.nonce = '';\n\n        // By default, a newly-created contact will have the selected state.\n        this.selectCard(card);\n    }\n\n    deleteCard = (cardId: String) => {\n\n        var idx = this.getIndexOfCard(cardId);\n\n        console.log(\"Delete ID: \" + idx);\n\n        if (idx !== -1) {\n\n            console.log(\"Delete ID: \" + idx);\n            console.log(\"cards before size: \" + this.cards.length);\n\n            this.cards.splice(idx, 1);\n\n            console.log(\"cards after size: \" + this.cards.length);\n\n            this.selectCard(null);\n        }\n        return this.cards;\n    }\n\n    addCard = (card: Card) => {\n        this.cards.push(card);\n        this.selectCard(card);\n        return this.cards;\n    }\n\n    updateCard = (card: Card) => {\n        var idx = this.getIndexOfCard(card._id);\n        if (idx !== -1) {\n            this.cards[idx] = card;\n            this.selectCard(card);\n        }\n        return this.cards;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/card-list/card-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/contract-details/contract-details.component.css\n// module id = ./src/app/views/contract-details/contract-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"form-group pull-right col-lg-2 col-md-2 col-sm-2\\\" style=\\\"padding-top: 12px;\\\">\\n        <select class=\\\"form-control\\\" id=\\\"net\\\" required [(ngModel)]=\\\"netType\\\" (change)=\\\"onNetChange()\\\" name='net'>\\n            <option *ngFor=\\\"let item1 of netTypeArr\\\" [value]=\\\"item1.value\\\">{{item1.name}}</option>\\n        </select>\\n    </div>\\n    <a id=\\\"logo\\\">\\n        <img src=\\\"assets/imgs/logo-b.png\\\">\\n    </a>\\n</div>\\n\\n<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n                aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n                <img alt=\\\"Nebulas\\\" src=\\\"assets/imgs/icon_19.png\\\">\\n            </a>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">NAS Wallet Library</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li *ngFor=\\\"let item of menuMyItems\\\" class={{item.active}}>\\n                    <a routerLink={{item.path}}{{item.parameterID}}{{item.random}} routerLinkActive=\\\"active fluffy\\\">{{item.linkName}}</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li class='active'>\\n                    <a routerLink=\\\"/ContractDetails\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Contracts</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a routerLink=\\\"/WalletDetails\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-usd\\\"></span> Transactions</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a routerLink=\\\"/CardList\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-list\\\"></span> Wallets</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n\\n<div class=\\\"container\\\">\\n\\n    <!-- COMPONENT START -->\\n    <!-- <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group input-file\\\" name=\\\"Fichier1\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder='Choose a file...' />\\n            <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default btn-choose\\\" type=\\\"button\\\" (change)=\\\"handleInputChange($event)\\\">Choose</button>\\n            </span>\\n        </div>\\n    </div> -->\\n\\n\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12  horizontal-center-row\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-8 col-md-8 col-sm-8\\\">\\n                <label for=\\\"pay-from\\\">1. Select Your Wallet File:</label>\\n                <input class=\\\"btn btn-primary btn-choose col-lg-12 col-md-12 col-sm-12\\\" type=\\\"file\\\" name=\\\"file\\\" accept=\\\"*/*\\\" (change)=\\\"handleInputChange($event)\\\">\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\">\\n                <label for=\\\"pay-pw\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control \\\" name=\\\"pay-pw\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\" />\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"fromAddress\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-4 col-md-4 col-sm-4\\\">\\n                <label for=\\\"pay-from\\\">From Address</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-from\\\" [(ngModel)]=\\\"fromAddress\\\" placeholder=\\\"From Address\\\" />\\n            </div>\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-nonce\\\">Nonce</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-nonce\\\" [(ngModel)]=\\\"nonce\\\" placeholder=\\\"\\\" />\\n            </div>\\n            <div class=\\\"form-group col-lg-3 col-md-3 col-sm-3\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-balance\\\">From Address Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-balance\\\" [(ngModel)]=\\\"fromBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-5 col-md-5 col-sm-5\\\">\\n                <label for=\\\"pay-from\\\">Contract Address</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-from\\\" [(ngModel)]=\\\"contractAddress\\\" placeholder=\\\"Contract Address\\\" />\\n            </div>\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\">\\n                <label for=\\\"pay-pw\\\">Wallet Type</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-pw\\\" [(ngModel)]=\\\"contractType\\\" placeholder=\\\"\\\" />\\n            </div>\\n            <div class=\\\"form-group col-lg-3 col-md-3 col-sm-3\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-balance\\\">Contract Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-balance\\\" [(ngModel)]=\\\"contractBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group  col-lg-2 col-md-2 col-sm-2\\\">\\n                <button class=\\\"btn btn-info col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"checkContractState()\\\">2. Check contract</button>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-10 col-md-10 col-sm-10\\\">\\n                <label for=\\\"pay-pw\\\">Contract Txhash</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-pw\\\" [(ngModel)]=\\\"contractTxhash\\\" placeholder=\\\"\\\" />\\n            </div>\\n            <div class=\\\"form-group  col-lg-2 col-md-2 col-sm-2\\\">\\n                <button class=\\\"btn btn-default col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"SearchContract()\\\">Search Contract</button>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div *ngIf=\\\"contractCode\\\" class=\\\"form-group  col-lg-12 col-md-12 col-sm-12\\\">\\n                <label for=\\\"pay-limit\\\">Contract Codes</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"10\\\" cols=\\\"100\\\" readonly>{{contractCode}}</textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\">\\n                <label for=\\\"pay-pw\\\">Contract Txhash</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-pw\\\" [(ngModel)]=\\\"contractTxhash\\\" placeholder=\\\"\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-value\\\">Function</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-value\\\" [(ngModel)]=\\\"function\\\" placeholder=\\\"save\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4 col-md-4 col-sm-4\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-value\\\">Arguments</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-value\\\" [(ngModel)]=\\\"arguments\\\" placeholder='[\\\"arg-1\\\", \\\"arg-2\\\", ...]' />\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-value\\\">Value (NAS)</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-value\\\" [(ngModel)]=\\\"value\\\" placeholder=\\\"Amount\\\" />\\n            </div>\\n\\n\\n            <div class=\\\"form-group  col-lg-2 col-md-2 col-sm-2\\\">\\n                <button class=\\\"btn btn-success col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"testContract()\\\">3. Test Contract</button>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"testResult\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-10 col-md-10 col-sm-10\\\">\\n                <label for=\\\"pay-pw\\\">Contract test / Call result (Hash)</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"100\\\" readonly>{{testResult}}</textarea>\\n            </div>\\n            <div class=\\\"form-group  col-lg-2 col-md-2 col-sm-2\\\">\\n                <button class=\\\"btn btn-warning col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"callContract()\\\">4. Call Contract</button>\\n            </div>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"testResult\\\" class=\\\"row\\\">\\n\\n            <div class=\\\"form-group  col-lg-4 col-md-4 col-sm-4\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-nonce\\\">Contract Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-nonce\\\" [(ngModel)]=\\\"newContractBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-balance\\\">New From Nonce</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-balance\\\" [(ngModel)]=\\\"newFromNonce\\\" placeholder=\\\"\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4 col-md-4 col-sm-4\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-balance\\\">From Address Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-balance\\\" [(ngModel)]=\\\"newFromBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\">\\n                <button class=\\\"btn btn-default btn-s col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"onCheckContractCall()\\\">\\n                    Check Balance Result\\n                </button>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"testResult\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-10 col-md-10 col-sm-10\\\">\\n                <label for=\\\"pay-pw\\\">Contract Call hash check result</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"100\\\" readonly>{{hashResult}}</textarea>\\n            </div>\\n            <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\">\\n                <button class=\\\"btn btn-primary btn-s col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"checkHashResult()\\\">\\n                    5. Check TX Status\\n                </button>\\n            </div>\\n        </div>\\n\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/contract-details/contract-details.component.html\n// module id = ./src/app/views/contract-details/contract-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { RemoteService } from '../../services/remote.service';\nimport { ContractService } from '../../services/contract.service';\nimport { PwdChangeStatusModel, CardBalance } from '../../models/defineClass';\nimport { StudentService } from '../../services/student.service';\n\n@Component({\n    selector: 'app-contract-details',\n    templateUrl: './contract-details.component.html',\n    styleUrls: ['./contract-details.component.css'],\n    providers: [RemoteService, ContractService, StudentService]\n})\nexport class ContractDetailsComponent implements OnInit {\n\n    // For Setect Net\n    netTypeArr = [\n        { value: '0', name: \"Testnet\" },\n        { value: '1', name: \"Local nodes\" },\n        { value: '2', name: \"Mainnet\" },\n    ];\n    netType: string = '0';\n\n    // For display Contract Info\n    // 1. 银行保险柜合约\n    // contractAddress: string = 'n1zQ3F2ZLsyQGeJjefhxoXCh6Uq2jesqvkB';\n    // contractTxhash:  string = 'c1ac05b55936e25d6fd959e51c7066b7d434428a005515963604f9bd3243f383';\n\n    // 2. 用户信息合约 http://blog.51cto.com/634435/2114749\n    //contractAddress: string = 'n1rQ1uHy4BEvdyuF4dRttMwp6Vu2ZTRuwB3';     // From Address: n1QvdfomX24brtcBrBypPDcPvt9Qwm9UBM9   created\n    //contractTxhash:  string = '053e6f946569c6400adef0750bc69268e326bd9c30a702fa8a5614db44a56cac';\n    // n1RaCeVeLxzJG2yLwE155y2S6EqjWeVboqJ   [\"title1\", \"content1\"]\n\n    // 3. Order 用户信息合约 contract.txt\n    //  [\"4\", \"7b571d64d9387826d7b5dc16d9c18b49f46aaac4da8a08000d5868a87503f8bc\", \"iPhone 49\"]\n\n    contractAddress: string = 'n1ohyV5xeVwMTCNm6sFLVKKNvdE5Uv6uDpS';     // From Address: n1QvdfomX24brtcBrBypPDcPvt9Qwm9UBM9   created, Map index by orderID\n    contractTxhash:  string = '7b571d64d9387826d7b5dc16d9c18b49f46aaac4da8a08000d5868a87503f8bc';\n\n    contractType: string;save\n    contractBalance: string;\n    value: string = \"0\";  // transaction value\n\n    contractCode: string;\n\n    fromAddress: string;\n    nonce:       string;\n    fromBalance: string;\n    password:    string = \"Nas20180429\";\n\n    testResult: string;\n\n    jsonAddressFile: File;\n    jsonFileContent: any;\n\n    newFromBalance: string;\n    newContractBalance: string;\n    newFromNonce: string;\n\n    //function:  string = 'save';\n    function:  string = 'readByID';\n    //arguments: string = '[\"4\", \"7b571d64d9387826d7b5dc16d9c18b49f46aaac4da8a08000d5868a87503f8bc\", \"iPhone 49\"]';  //can not has space !! because of will be splited\n    arguments: string = '[\"1\"]';   //'[0]';\n\n    hashResult: string;\n\n    constructor(private remoteService:   RemoteService,\n                private contractService: ContractService,\n                private studentService:  StudentService\n\n    ) { }\n\n    ngOnInit() {\n    }\n\n    checkContractState() {\n\n        console.log(\"1. 查看合约信息 ........ \" + this.contractAddress);\n\n        if (!this.contractAddress) {\n            alert(\" Please input Contract Address!\");\n            return;\n        }\n\n        this.remoteService.getAccountState(this.contractAddress).then((cardBalance: PwdChangeStatusModel) => {\n\n            let account_Result = JSON.parse(cardBalance._body);\n            var dataBalance = Number(account_Result.result.balance) / 1000000000000000000.0;\n\n            if (!isNaN(dataBalance))\n                this.contractBalance = dataBalance.toString();\n            else\n                this.contractBalance = '';\n\n            this.contractType = account_Result.result.type;\n        });\n    }\n\n    SearchContract() {\n\n        console.log(\"2. 查询合约信息 ........ \" + this.contractAddress);\n\n        if (!this.contractAddress) {\n            alert(\" Please input Contract Address!\");\n            return;\n        }\n\n        this.contractService.getContracts(this.contractTxhash).then((result: any) => {\n\n            this.contractCode = atob(result.data);\n            console.log(this.contractCode);\n\n            //console.log(result);\n            //this.contractCode = result;\n\n\n            /*\n            let account_Result = JSON.parse(cardBalance._body);\n            var dataBalance = Number(account_Result.result.balance) / 1000000000000000000.0;\n\n            if (!isNaN(dataBalance))\n                this.contractBalance = dataBalance.toString();\n            else\n                this.contractBalance = '';\n\n            this.contractType = account_Result.result.type;\n            */\n        });\n    }\n\n\n    checkHashResult() {\n\n        console.log(\"2. 查询 Hash Result 信息 ........ \");\n        if (!this.testResult) {\n            alert(\"no hash !\");\n            return;\n        }\n\n        this.contractService.getContracts(this.testResult).then((result: any) => {\n\n            console.log(result);\n            this.hashResult = JSON.stringify(result);\n        });\n    }\n\n\n    testContract() {\n\n        console.log(\"4. 测试合约 start........ \" + this.contractAddress);\n\n        if (!this.contractAddress) {\n            alert(\" Please input Contract Address!\");\n            return;\n        }\n\n        var nonce = Number(this.nonce) + 1;\n        var nonceStr = nonce.toString();\n        console.log(nonceStr);\n        \n\n        console.log(this.function);\n        console.log(this.arguments);\n\n        var value = Number(1.1) * 1000000000000000000.0\n        var valueStr = value.toString();\n\n        this.contractService.testTransaction({ 'toAddress': this.fromAddress, 'contractAddress': this.contractAddress,  'nonce': this.nonce, 'value': valueStr, 'function': this.function, 'arguments': this.arguments })\n            .then((result: any) => {\n\n                console.log(\"4. 测试合约 end........ \" + this.contractAddress);\n                //console.log(result);\n                this.testResult = JSON.stringify(result);\n                console.log(this.testResult);\n            });\n    }\n\n    callContract() {\n\n        console.log(\"5. 执行合约 start ........ \" + this.contractAddress);\n\n        if (!this.contractAddress) {\n            alert(\" Please input Contract Address!\");\n            return;\n        }\n\n        var nonce = Number(this.nonce) + 1;\n        var nonceStr = nonce.toString();\n        this.nonce = nonceStr; // Refresh Nonce for next transaction\n\n        //console.log(nonceStr);\n\n        var valueStr = parseFloat(this.value) * 1000000000000000000.0\n        \n        var tempObj = { 'toAddress': this.contractAddress, 'password': this.password, 'nonce': nonceStr, 'value': valueStr, 'function': this.function, 'arguments': this.arguments };\n        console.log(tempObj);\n\n\n        // here toAddress should be contractAddress ?????\n        //this.contractService.callTransaction(this.jsonAddressFile, { 'toAddress': this.contractAddress, 'nonce': nonceStr, 'value': valueStr, 'function': this.function, 'arguments': this.arguments }).then((result: any) => {\n        this.contractService.callTransaction( this.jsonAddressFile, tempObj ).then((result: any) => {\n\n            console.log(\"5. 执行合约 end ........ \" + this.contractAddress);\n            //console.log(result);\n            //this.testResult = JSON.stringify(result);\n            \n            var rr = JSON.stringify(result);\n            this.testResult = JSON.parse(rr).hash;\n\n            console.log(this.testResult);\n        });\n\n    }\n\n    // 4. 检查合约执行 Button  ================================================\n    public onCheckContractCall() {\n\n        console.log(\"4. 检查合约执行结果 ...... \");\n\n        // get from account status after sending transaction\n        this.studentService.getAccountState(this.fromAddress).then((cardBalance: CardBalance) => {\n\n            var dataBalance = Number(cardBalance.balance) / 1000000000000000000.0;\n            this.newFromBalance = JSON.stringify(dataBalance) + ' NAS';\n\n            this.newFromNonce = cardBalance.nonce;\n        });\n\n        // get to contractAddress account status after sending transaction\n        this.studentService.getAccountState(this.contractAddress).then((cardBalance: CardBalance) => {\n\n            var dataBalance = Number(cardBalance.balance) / 1000000000000000000.0;\n            this.newContractBalance = JSON.stringify(dataBalance) + ' NAS';\n        });\n    }\n\n\n    // Selected file button\n    handleInputChange(e) {\n\n        this.jsonAddressFile = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n        var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\n\n        //this.jsonAddressFile = e;\n\n        console.log(file);\n        console.log(\"mFileJson ######################################################\");\n\n        //var mFileJson = JSON.parse(file.target.result);\n        //console.log(mFileJson);\n\n        //var tempFile = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0]; \n\n        this.fromAddress = this.jsonAddressFile.name.split('.')[0];\n\n        this.onGetFromAddressInfo();\n\n        /*\n                var reader = new FileReader();\n                reader.onload = () => {\n                    this.jsonFileContent = reader.result;\n                }\n                reader.readAsText(file.name);\n                console.log(this.jsonFileContent);\n        */\n    }\n\n    onGetFromAddressInfo() {\n        console.log(\"3. 得到源账户信息 ........ \" + this.contractAddress);\n\n        // get to account status after sending transaction\n        this.studentService.getAccountState(this.fromAddress).then((result: CardBalance) => {\n\n            var value = Number(result.balance) / 1000000000000000000.0;\n            this.fromBalance = JSON.stringify(value) + ' NAS';\n\n            this.nonce = result.nonce\n        });\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/contract-details/contract-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/student-details/student-details.component.css\n// module id = ./src/app/views/student-details/student-details.component.css\n// module chunks = main","module.exports = \"\\n\\n\\n<div *ngIf=\\\"student\\\" class=\\\"row\\\" >\\n  <div class=\\\"col-md-12\\\">\\n    <h2 *ngIf=\\\"student._id\\\">Student Details</h2>\\n    <h2 *ngIf=\\\"!student._id\\\">New Student</h2>\\n  </div>\\n</div>\\n<div *ngIf=\\\"student\\\" class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"student-first-name\\\">First Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"student-first-name\\\" [(ngModel)]=\\\"student.FirstName\\\" placeholder=\\\"First Name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"student-last-name\\\">Last Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"student-last-name\\\" [(ngModel)]=\\\"student.LastName\\\" placeholder=\\\"Last Name\\\"/>\\n    </div>\\t\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"student-school\\\">School</label>\\n      <input class=\\\"form-control\\\" name=\\\"student-school\\\" [(ngModel)]=\\\"student.School\\\" placeholder=\\\"School\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"student-start-date\\\">Start Date</label>\\n      <input class=\\\"form-control\\\" name=\\\"student-start-date\\\" [(ngModel)]=\\\"student.StartDate\\\" placeholder=\\\"mm/dd/yyyy\\\"/>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!student._id\\\" (click)=\\\"createStudent(student)\\\">Create</button>\\n    <button class=\\\"btn btn-info\\\" *ngIf=\\\"student._id\\\" (click)=\\\"updateStudent(student)\\\">Update</button>\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"student._id\\\" (click)=\\\"deleteStudent(student._id)\\\">Delete</button>\\n  </form>\\n\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/student-details/student-details.component.html\n// module id = ./src/app/views/student-details/student-details.component.html\n// module chunks = main","\nimport { Component, Input } from '@angular/core';\nimport { Student } from '../../models/defineClass';\nimport { StudentService } from '../../services/student.service';\n\n@Component({\n  selector: 'student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.css']\n})\n\nexport class StudentDetailsComponent {\n  @Input()\n  student: Student;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n  constructor (private studentService: StudentService) {}\n\n  createStudent(student: Student) {\n    this.studentService.createStudent(student).then((newStudent: Student) => {\n      this.createHandler(newStudent);\n    });\n  }\n\n  updateStudent(student: Student): void {\n    this.studentService.updateStudent(student).then((updatedStudent: Student) => {\n      this.updateHandler(updatedStudent);\n    });\n  }\n\n  deleteStudent(studentId: String): void {\n    this.studentService.deleteStudent(studentId).then((deletedstudentId: String) => {\n      this.deleteHandler(deletedstudentId);\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/student-details/student-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/student-list/student-list.component.css\n// module id = ./src/app/views/student-list/student-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <h2>Students</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\"\\n        *ngFor=\\\"let s of students\\\"\\n        (click)=\\\"selectStudent(s)\\\"\\n        [class.active]=\\\"s === selectedStudent\\\">\\n        {{s.FirstName}} {{s.LastName}}\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"createNewStudent()\\\">New</button>\\n  </div>\\n  \\n  <div class=\\\"col-md-5 col-md-offset-2\\\">\\n\\n\\n    <student-details\\n      [student]=\\\"selectedStudent\\\"\\n      [createHandler]=\\\"addStudent\\\"\\n      [updateHandler]=\\\"updateStudent\\\"\\n      [deleteHandler]=\\\"deleteStudent\\\">\\n    </student-details>\\n  \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/student-list/student-list.component.html\n// module id = ./src/app/views/student-list/student-list.component.html\n// module chunks = main","\nimport { Component, OnInit } from '@angular/core';\nimport { Student } from '../../models/defineClass';\nimport { StudentService } from '../../services/student.service';\nimport { StudentDetailsComponent } from '../student-details/student-details.component';\n\n@Component({\n  selector: 'student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css'],\n  providers: [StudentService]\n})\n\nexport class StudentListComponent implements OnInit {\n\n  students: Student[]\n  selectedStudent: Student\n\n  constructor(private StudentService: StudentService) { }\n\n  ngOnInit() {\n     this.StudentService\n      .getStudents()\n      .then((students: Student[]) => {\n        this.students = students.map((student) => {\n          return student;\n        });\n      });\n  }\n\n  private getIndexOfStudent = (studentId: String) => {\n    return this.students.findIndex((student) => {\n      return student._id === studentId;\n    });\n  }\n\n  selectStudent(student: Student) {\n    this.selectedStudent = student\n  }\n\n  createNewStudent() {\n    var student: Student = {\n      FirstName: '',\n      LastName: '',\n      School: '',\n      StartDate: new Date()\n    };\n\n    // By default, a newly-created contact will have the selected state.\n    this.selectStudent(student);\n  }\n\n  deleteStudent = (studentId: String) => {\n    var idx = this.getIndexOfStudent(studentId);\n    if (idx !== -1) {\n      this.students.splice(idx, 1);\n      this.selectStudent(null);\n    }\n    return this.students;\n  }\n\n  addStudent = (student: Student) => {\n    this.students.push(student);\n    this.selectStudent(student);\n    return this.students;\n  }\n\n  updateStudent = (student: Student) => {\n    var idx = this.getIndexOfStudent(student._id);\n    if (idx !== -1) {\n      this.students[idx] = student;\n      this.selectStudent(student);\n    }\n    return this.students;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/student-list/student-list.component.ts","module.exports = \"input[type=\\\"file\\\"] {\\n    display: none;\\n}\\n.custom-file-upload {\\n    border: 3px dotted gray;\\n    display: inline-block;\\n    /*padding: 13px 22px;*/\\n    cursor: pointer;\\n    /*width: 250px;\\n    height: 70px;*/\\n    background: lightgray;\\n    border-radius: 5px;\\n}\\n/* For drop zone */\\n.my-drop-zone { border: dotted 3px lightgray; }\\n.nv-file-over { border: dotted 3px red; }\\n/* Default class applied to drop zones on over */\\n.another-file-over-class { border: dotted 3px green; }\\nhtml, body { height: 100%; }\\n/* Test */\\n.card {\\n      border: 2px dashed #eee;\\n      padding: 1rem;\\n      margin: 0.4rem;\\n      font-family: sans-serif;\\n      -webkit-box-shadow: 2px 2px 2px #888888;\\n              box-shadow: 2px 2px 2px #888888;\\n    }\\n.dark {\\n      /* background-color: green; */\\n      border: 2px dashed #eee;\\n      border-color: #5bc0de;\\n      color: red;\\n    }\\n.emptyLine {\\n      /* background-color: green; */\\n      border: 2px dashed #eee;\\n      border-color: #f0ad4e;\\n      color: red;\\n    }\\n.flat {\\n      -webkit-box-shadow: none;\\n              box-shadow: none;\\n    }\\n[contenteditable]:hover:after {\\n  /* content: 'click to edit';  */\\n  font-style: italic;\\n  font-size: 12px;\\n  font-family: sans-serif;\\n  color: #ccc;\\n \\n}\\n[contenteditable]:hover, [contenteditable]:focus {\\n  background: #FFFFD3;\\n}\\n[contenteditable]:focus {\\n  padding: 5px;\\n}\\n[contenteditable]:focus:after {\\n  content: '';\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/wallet-details/wallet-details.component.css\n// module id = ./src/app/views/wallet-details/wallet-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"form-group pull-right col-lg-2 col-md-2 col-sm-2\\\" style=\\\"padding-top: 12px;\\\">\\n        <select class=\\\"form-control\\\" id=\\\"net\\\" required [(ngModel)]=\\\"netType\\\" (change)=\\\"onNetChange()\\\" name='net'>\\n            <option *ngFor=\\\"let item1 of netTypeArr\\\" [value]=\\\"item1.value\\\">{{item1.name}}</option>\\n        </select>\\n    </div>\\n\\n    <a id=\\\"logo\\\">\\n        <img src=\\\"assets/imgs/logo-b.png\\\">\\n    </a>\\n</div>\\n\\n<nav class=\\\"navbar navbar-inverse\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\"\\n                aria-expanded=\\\"false\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n                <img alt=\\\"Nebulas\\\" src=\\\"assets/imgs/icon_19.png\\\">\\n            </a>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">NAS Wallet Library</a>\\n        </div>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li *ngFor=\\\"let item of menuMyItems\\\" class={{item.active}}>\\n                    <a routerLink={{item.path}}{{item.parameterID}}{{item.random}} routerLinkActive=\\\"active fluffy\\\">{{item.linkName}}</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a routerLink=\\\"/ContractDetails\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span> Contracts</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li class='active'>\\n                    <a routerLink=\\\"/WalletDetails\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-usd\\\"></span> Transactions</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n                <li>\\n                    <a routerLink=\\\"/CardList\\\" routerLinkActive=\\\"active fluffy\\\">\\n                        <span class=\\\"glyphicon glyphicon-list\\\"></span> Wallets</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 col-lg-3 col-sm-3 col-xs-3\\\">\\n            <h3>Select wallet files</h3>\\n            <div ng2FileDrop [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\" (fileOver)=\\\"fileOverBase($event)\\\" [uploader]=\\\"uploader\\\"\\n                class=\\\"well my-drop-zone\\\">\\n                <strong>\\n                    <h4>\\n                        <span class=\\\"glyphicon glyphicon-screenshot\\\"></span>&nbsp;&nbsp;Drop wallet files here\\n                        <br />(Drop Zone) </h4>\\n                </strong>\\n            </div>\\n            <label for=\\\"file-upload\\\" class=\\\"custom-file-upload col-md-12 col-lg-12 col-sm-12 col-xs-12\\\" style=\\\"padding: 15px;\\\">\\n                &nbsp;\\n                <span class=\\\"glyphicon glyphicon-folder-open\\\"></span>&nbsp;&nbsp;&nbsp;Click here\\n                <br /> to select wallet files\\n            </label>\\n            <input id=\\\"file-upload\\\" type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple name=\\\"files[]\\\" />\\n        </div>\\n        <div class=\\\"col-lg-9 col-md-9 col-sm-9 col-xs-9\\\">\\n            <div *ngIf=\\\"uploader.queue.length\\\" class=\\\"pull-right\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"onClearAll()\\\">\\n                    <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\n                </button>\\n            </div>\\n            <h4>Listing wallets</h4>\\n            <p>Queue length: {{ uploader?.queue?.length }}</p>\\n            <table class=\\\"table\\\">\\n                <thead>\\n                    <tr>\\n                        <th width=\\\"50%\\\">File Name</th>\\n                        <th>Status</th>\\n                        <th>Actions</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                        <td>\\n                            <strong>{{ item?.file?.name }}</strong>\\n                        </td>\\n                        <td class=\\\"text-center\\\">\\n                            <span *ngIf=\\\"item.isSuccess\\\">\\n                                <i class=\\\"glyphicon glyphicon-ok\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"item.isCancel\\\">\\n                                <i class=\\\"glyphicon glyphicon-ban-circle\\\"></i>\\n                            </span>\\n                            <span *ngIf=\\\"item.isError\\\">\\n                                <i class=\\\"glyphicon glyphicon-remove\\\"></i>\\n                            </span>\\n                        </td>\\n                        <td nowrap>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" (click)=\\\"onSelectFrom(item?._file)\\\">\\n                                <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Select From &nbsp;&nbsp;&nbsp;\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-info btn-xs\\\" (click)=\\\"onSelectTo(item?._file)\\\">\\n                                <span class=\\\"glyphicon glyphicon-log-in\\\"></span> Select To\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"onRemoveOneFile(item)\\\">\\n                                <span class=\\\"glyphicon glyphicon glyphicon-remove\\\"></span> Remove\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n    <br />\\n    <div class=\\\"col-lg-12 col-md-12 col-sm-12  horizontal-center-row\\\">\\n        <div *ngIf=\\\"fromAddress\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-10 col-md-10 col-sm-10\\\">\\n                <label for=\\\"pay-from\\\">From Address</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-from\\\" [(ngModel)]=\\\"fromAddress\\\" placeholder=\\\"From Address\\\" />\\n            </div>\\n            <div class=\\\"col-lg-2 col-md-2 col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-s\\\" (click)=\\\"onUnlockAccount()\\\">\\n                    1. Unlock Account\\n                </button>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"fromAddress\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-3 col-md-3 col-sm-3\\\">\\n                <label for=\\\"pay-pw\\\">From Wallet Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control \\\" name=\\\"pay-pw\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Your Wallet Address\\\" />\\n            </div>\\n            <div class=\\\"form-group col-lg-3 col-md-3 col-sm-3\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-nonce\\\">Nonce</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-nonce\\\" [(ngModel)]=\\\"nonce\\\" placeholder=\\\"\\\" />\\n            </div>\\n            <div class=\\\"form-group col-lg-6 col-md-6 col-sm-6\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-balance\\\">From Address Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-balance\\\" [(ngModel)]=\\\"balance\\\" placeholder=\\\"\\\" />\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"toAddress\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-10 col-md-10 col-sm-10\\\">\\n                <label for=\\\"card-CardName\\\">To Address</label>\\n                <input class=\\\"form-control\\\" name=\\\"card-CardName\\\" [(ngModel)]=\\\"toAddress\\\" placeholder=\\\"to Address\\\" />\\n            </div>\\n            <div class=\\\"col-lg-2 col-md-2 col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-s\\\" (click)=\\\"onCreateSignData()\\\">\\n                    2. Sign Transaction\\n                </button>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"toAddress\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-6 col-md-6 col-sm-6\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-value\\\">Pay Value / Amount to Send (NAS)</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-value\\\" [(ngModel)]=\\\"amount\\\" placeholder=\\\"Amount\\\" />\\n            </div>\\n            <div class=\\\"form-group  col-lg-6 col-md-6 col-sm-6\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-nonce\\\">To Address Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-nonce\\\" [(ngModel)]=\\\"toBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"toAddress\\\" class=\\\"row\\\">\\n            <!--\\n            <div class=\\\"form-group  col-lg-6 col-md-6 col-sm-6\\\">\\n                <label for=\\\"pay-limit\\\">Gas Limit</label>\\n                <input class=\\\"form-control\\\" name=\\\"pay-limit\\\" [(ngModel)]=\\\"gasLimit\\\" placeholder=\\\"\\\" />\\n            </div>\\n            -->\\n            <div class=\\\"form-group  col-lg-10 col-md-10 col-sm-10\\\">\\n                <label for=\\\"gasPrice\\\">Gas Price ( 1 NAS = 1EWei = 10 18 Wei )</label>\\n                <input class=\\\"form-control\\\" name=\\\"gasPrice\\\" [(ngModel)]=\\\"gasPrice\\\" placeholder=\\\"\\\" />\\n            </div>\\n            <div *ngIf=\\\"mTxHash\\\" class=\\\"col-lg-2 col-md-2 col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"onSendTransaction()\\\">\\n                    3. Send Transaction\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div *ngIf=\\\"mTxHash\\\" class=\\\"form-group  col-lg-6 col-md-6 col-sm-6\\\">\\n                <label for=\\\"pay-limit\\\">Signed Transaction</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"6\\\" cols=\\\"50\\\" readonly>{{mTxHash}}</textarea>\\n            </div>\\n            <div *ngIf=\\\"Receipt\\\" class=\\\"form-group  col-lg-6 col-md-6 col-sm-6\\\">\\n                <label for=\\\"gasPrice\\\">Transaction Receipt</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"6\\\" cols=\\\"50\\\" readonly>{{Receipt}}</textarea>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"Receipt\\\" class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-5 col-md-5 col-sm-5\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-balance\\\">From Address Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-balance\\\" [(ngModel)]=\\\"newBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n            <div class=\\\"form-group  col-lg-5 col-md-5 col-sm-5\\\" style=\\\"display:online;\\\">\\n                <label for=\\\"pay-nonce\\\">To Address Balance (NAS)</label>\\n                <input class=\\\"form-control\\\" readonly name=\\\"pay-nonce\\\" [(ngModel)]=\\\"newToBalance\\\" placeholder=\\\"\\\" />\\n            </div>\\n\\n            <div *ngIf=\\\"mTxHash\\\" class=\\\"col-lg-2 col-md-2 col-sm-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"onCheckTransaction()\\\">\\n                    4. Check Balance\\n                </button>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\\"Receipt\\\" class=\\\"row\\\">\\n                <div class=\\\"form-group col-lg-10 col-md-10 col-sm-10\\\">\\n                    <label for=\\\"pay-pw\\\">Contract Call hash check result</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"1\\\" cols=\\\"100\\\" readonly>{{hashResult}}</textarea>\\n                </div>\\n                <div class=\\\"form-group col-lg-2 col-md-2 col-sm-2\\\">\\n                    <button class=\\\"btn btn-primary btn-s col-lg-12 col-md-12 col-sm-12\\\" (click)=\\\"checkHashResult()\\\">\\n                        5. Check TX Status\\n                    </button>\\n                </div>\\n            </div>     \\n    </div>\\n\\n\\n    <!--\\n    <div class=\\\"col-md-5 col-md-offset-0\\\">\\n        <div *ngIf=\\\"selectedCard\\\" class=\\\"row\\\">\\n            <form class=\\\"col-md-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"card-CardAddress\\\">From Address</label>\\n                    <input class=\\\"form-control\\\" name=\\\"card-CardAddress\\\" [(ngModel)]=\\\"address\\\" placeholder=\\\"钱包地址\\\" />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"card-Balance\\\">Balance</label>\\n                    <input class=\\\"form-control\\\" name=\\\"card-Balance\\\" [(ngModel)]=\\\"balance\\\" placeholder=\\\"\\\" />\\n                </div>\\n                \\n                <div class=\\\"form-group invisible\\\" >\\n                    <label for=\\\"card-Nonce\\\">交易次数</label>\\n                    <input class=\\\"form-control\\\" name=\\\"card-Nonce\\\" [(ngModel)]=\\\"nonce\\\" placeholder=\\\"\\\" />\\n                </div>\\n                <div class=\\\"form-group invisible\\\" >\\n                        <label for=\\\"toAddress\\\">To Address</label>\\n                        <input class=\\\"form-control\\\" name=\\\"toAddress\\\" [(ngModel)]=\\\"toAddress\\\" placeholder=\\\"to wallet Address\\\" />\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/wallet-details/wallet-details.component.html\n// module id = ./src/app/views/wallet-details/wallet-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FileUploader, FileItem, ParsedResponseHeaders } from 'ng2-file-upload';\nimport { StudentService } from '../../services/student.service';\nimport { ContractService } from '../../services/contract.service';\nimport { CardService } from '../../services/card.service';\nimport { NetState, PwdChangeStatusModel, Student, Card, CardBalance } from '../../models/defineClass';\n\n\nconst URL_UPLOAD = 'http://localhost:55756/api/FileProcessing/';\n\nexport class Result {\n    result: CardBalance;\n}\n\nexport class Signed2Result {\n    signed: string;\n    toAccount: CardBalance;\n}\n\n\n@Component({\n    selector: 'app-wallet-details',\n    templateUrl: './wallet-details.component.html',\n    styleUrls: ['./wallet-details.component.css'],\n    providers: [CardService, StudentService, ContractService]\n})\nexport class WalletDetailsComponent implements OnInit {\n\n    // Import data -- ng2-file-upload\n    public uploader: FileUploader = new FileUploader({ url: URL_UPLOAD });\n\n    public hasBaseDropZoneOver: boolean = false;\n    public hasAnotherDropZoneOver: boolean = false;\n\n    public myFile: any;\n\n    // For display Account Info\n    selectedCard: Card\n    fromAddress: string\n    toAddress: string\n    //netState: NetState;\n    //cardBalance: CardBalance;\n    resultData: Result;\n\n    private balance: string = null;\n    private newBalance: string = null;\n    private toBalance: string = null;\n    private newToBalance: string = null;\n    private nonce: string = null;\n    private password: string = 'Nas20180429';\n\n    // \"value\":\"3000000000000000000\"\n    private amount: string = '1';\n    private gasPrice: string = '100000';\n\n    // For Setect Net\n    netTypeArr = [\n        { value: '0', name: \"Testnet\" },\n        { value: '1', name: \"Local nodes\" },\n        { value: '2', name: \"Mainnet\" },\n    ];\n\n    netType: string = '0';\n\n    mTxHash: string;\n    Receipt: string;\n\n    jsonAddressFile: any;\n    jsonFileContent: any;\n\n    hashResult: string;\n\n    constructor(private studentService: StudentService,\n        private contractService: ContractService\n    ) { }\n\n    ngOnInit() {\n\n        // For : Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.\n        this.uploader.onBeforeUploadItem = (item) => {\n            item.withCredentials = false;\n        }\n\n        const self = this;\n        this.uploader.onSuccessItem = (item: FileItem, response: string, status: number, headers: ParsedResponseHeaders) => {\n            console.log(\"onSuccessItem \" + status, item);\n            // ???self.handle(response);\n        }\n    }\n\n    getStudent() {\n\n        //this.studentService.getStudents().then((newStudent) => {\n        //this.studentService.getAccountState(\"n1L5AExWGCP299jB5RWmdo7t6qCRZ4MW8PW\").then((newStudent) => {\n        this.studentService.postAccount(this.myFile).then((newStudent) => {\n\n            console.log(newStudent);\n        });\n    }\n\n    // For test API - Remove All Button:\n    public onClearAll() {\n        this.uploader.clearQueue()\n        delete this.selectedCard;\n\n        // initial: \n        this.selectedCard = null;\n        this.fromAddress = null;\n        this.toAddress = null;\n        this.resultData = null;\n        this.balance = null;\n        this.newBalance = null;\n        this.toBalance = null;\n        this.newToBalance = null;\n        this.nonce = null;\n        this.password = 'Nas20180429';\n        this.mTxHash = null;\n        this.Receipt = null;\n        this.jsonAddressFile = null;\n        this.jsonFileContent = null;\n    }\n\n    private onRemoveOneFile(item) {\n        item.remove()\n    }\n\n    // 选择 From Address Button =================================================================================================================\n    public onSelectFrom(evt) {\n\n        console.log(\"选择 From Address \");\n\n        //this.selectedCard = new Card;\n        this.jsonAddressFile = evt; // FileList object is file, now use _file\n\n        this.fromAddress = this.jsonAddressFile.name.split('.')[0];\n\n    }\n\n    // 选择 From Address Button =================================================================================================================\n    public onSelectTo(evt) {\n\n        console.log(\"选择 To Address \");\n\n        //this.selectedCard = new Card;\n        var jsonAddressFile = evt; // FileList object is file, now use _file\n\n        this.toAddress = jsonAddressFile.name.split('.')[0];\n\n    }\n\n    // 1. 账户解锁 Button =================================================================================================================\n    public onUnlockAccount() {\n\n        console.log(\"1. 账户解锁 - Start ---------------- \");\n\n        let reader = new FileReader();\n\n        reader.onload = () => {\n\n            this.jsonFileContent = reader.result;\n\n            console.log(\"jsonFileContent: =========== \");\n            console.log(this.jsonFileContent);\n\n            var obj = JSON.parse(this.jsonFileContent);\n            console.log(obj.address);\n\n            this.studentService.postAccount(this.jsonAddressFile).then((cardBalance: CardBalance) => {\n\n                console.log(\"1. 账户解锁 - End \");\n                console.log(cardBalance);\n\n                var dataBalance = Number(cardBalance.balance) / 1000000000000000000.0;\n                if (!isNaN(dataBalance))\n                    this.balance = dataBalance.toString() + ' NAS';\n                else\n                    this.balance = '';\n\n                this.nonce = cardBalance.nonce;\n            });\n\n        }\n        reader.readAsText(this.jsonAddressFile);\n\n\n    }\n\n    // 2. 生成签名 Button ===============================================\n    public onCreateSignData() {\n\n        if (!this.jsonAddressFile)\n            return;\n\n        console.log(\"2. 生成签名 - Start -------------------- \");\n        //this.selectedCard = new Card;\n        //var file = evt; // FileList object is file, now use _file\n\n        console.log(this.nonce);\n\n        var nonce = Number(this.nonce) + 1;\n        var nonceStr = nonce.toString();\n        console.log(nonceStr);\n\n        var value = Number(this.amount) * 1000000000000000000.0\n        var valueStr = value.toString();\n\n        this.studentService.putTransaction(this.jsonAddressFile, { 'nonce': nonceStr, 'value': valueStr, 'toAddress': this.toAddress }).then((result: Signed2Result) => {\n\n            console.log(\"2. 生成签名 - End\");\n            console.log(result);\n\n            console.log(result.signed);\n            console.log(result.toAccount);\n\n            var dataBalance = Number(result.toAccount.balance) / 1000000000000000000.0;\n            if (!isNaN(dataBalance))\n                this.toBalance = dataBalance.toString() + ' NAS';\n            else\n                this.toBalance = '';\n\n            this.mTxHash = result.signed.toString();\n        });\n    }\n\n    // 3. 发送交易 Button  ================================================\n    public onSendTransaction() {\n\n        if (!this.jsonAddressFile)\n            return;\n\n        console.log(\"3. 发送交易 - Start ...... \");\n\n        this.studentService.deleteStudent(this.jsonAddressFile).then((cardBalance: CardBalance) => {\n\n            console.log(\"3. 发送交易 - End ...... \");\n            console.log(cardBalance);\n\n            this.Receipt = JSON.stringify(cardBalance);\n        });\n    }\n\n    // 4. 检查交易 Button  ================================================\n    public onCheckTransaction() {\n\n        if (!this.jsonAddressFile)\n            return;\n\n        console.log(\"4. 检查交易 ...... \");\n\n        // get from account status after sending transaction\n        this.studentService.getAccountState(this.fromAddress).then((cardBalance: CardBalance) => {\n\n            var dataBalance = Number(cardBalance.balance) / 1000000000000000000.0;\n            this.newBalance = JSON.stringify(dataBalance) + ' NAS';\n        });\n\n        // get to account status after sending transaction\n        this.studentService.getAccountState(this.toAddress).then((cardBalance: CardBalance) => {\n\n            var dataBalance = Number(cardBalance.balance) / 1000000000000000000.0;\n            this.newToBalance = JSON.stringify(dataBalance) + ' NAS';\n        });\n    }\n\n    checkHashResult() {\n\n        console.log(\"5. 查询 Hash Result 信息 ........ \");\n\n        if (!this.Receipt) {\n            alert(\"no hash !\");\n            return;\n        }\n\n        var obj = JSON.parse(this.Receipt);\n\n        this.contractService.getContracts(obj.hash).then((result: any) => {\n\n            console.log(result);\n\n            switch (result.status) {\n                case 0:\n                    this.hashResult = \"0: 交易失败(failed)\";\n                    break;\n                case 1:\n                    this.hashResult = \"1: 交易成功(success)\";\n                    break;\n                case 2:\n                    this.hashResult = \"2: 交易待定(pending)\";\n                    break;\n            }\n            //this.hashResult = result.status.toString();\n\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/wallet-details/wallet-details.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}